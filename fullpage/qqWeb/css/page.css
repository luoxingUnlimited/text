html, body, section {
    min-width: 600px;
    min-height: 1000px;
    /* 设置最小高度和宽度 防止布局变形 */
}
/* 侧边栏圆点背景 */
#fp-nav ul li a span {
    background-color: #1981ff;
}
/* 背景部分 */
#bg {
    width: 1000px;
    height: 1000px;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);/* 水平居中 垂直居中 */
    /* background-color: rgba(0, 0, 255, 0.2); */
    transition: all 2s;/* 过渡 谁利用transform做动画就谁过渡
    */
}
/* 背景里面圆的部分 */
.circle1,
.circle2,
.circle3 {
    position: absolute;
    /* background-color: red; */
    border-radius: 50%;
}
/* 第一行的圆 */
.row1 .circle1 {
    width: 60px;
    height: 60px;
    left: 400px;
    top: 200px;
}
.row1 .circle2 {
    width: 100px;
    height: 100px;
    left: 800px;
    top: 180px;
}
/* 第二行的圆 */
.row2 .circle1 {
    width: 150px;
    height: 150px;
    left: 150px;
    top: 220px;
}
.row2 .circle2 {
    width: 180px;
    height: 180px;
    left: 990px;
    top: 320px;
}
.row2 .circle3 {
    width: 150px;
    height: 150px;
    left: 50%;
    top: 50%;
}
/* 第三行的圆 */
.row3 .circle1 {
    width: 100px;
    height: 100px;
    left: 80px;
    top: 600px;
}
.row3 .circle2 {
    width: 50px;
    height: 50px;
    left: 700px;
    top: 600px;
}
/* 第四行的圆 */
.row4 .circle1 {
    width: 400px;
    height: 400px;
    left: 300px;
    top: 600px;
}
.row1 div,
.row2 div,
.row3 div,
.row4 div {
    background: -webkit-linear-gradient(top, #fff, #dedede);
    /* 背景渐变-webkit-linear-gradient(起始位置， 起始颜色， 结束颜色) */
}
/* 第一屏 */
.section1 {
    perspective: 1000px;/* 透视 视距 */
}
/* 起始状态 */
.p1 {
    width: 880px;
    height: 320px;
    position: absolute;
    left: 50%;
    top: 45%;
    transform: translate(-50%, -50%) translateZ(800px) rotateZ(-180deg);/* translateZ与透视连用 原则'近大远小' */
    background: url(../images/skin.gif) no-repeat;
    transition: all 2s;/* 过渡 */
}
/* 动画结束状态  添加类的方式实现动画*/
.comeIn .p1 {
    transform: translate(-50%, -50%) translateZ(0) rotateZ(0);
}
/* 准备离开第一屏时，背景逆时针旋转60° */
.rotate {
    transform: translate(-50%, -50%) rotateZ(-60deg) !important;/* id选择器的权重大于类选择器 所以提高权重 */
}
/* 第二屏 */
.section2 {
    perspective: 1000px;/* 子元素做动画 给父元素添加透视 */
}
/* 开始状态 */
.p2 {
    width: 316px;
    height: 360px;
    text-align: center;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) translateZ(-5000px) scale(0.2);
    /* translateZ 和scale是为了让目标看上去很小 要的是从小变大的效果 */
    transition: all 2s;/* 要做动画 就要有过渡效果 */
}
/* 第三屏 */
.section3 {
    perspective: 1000px;
}
/* 开始状态 */
.p3 {
    width: 1440px;
    height: 760px;
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -270px;
    margin-top: -284px;
    border: 1px solid #ccc;
    /* transform: translateZ(-50px) rotateX(30deg); */
    transform: translateZ(1200px) rotateX(120deg);
    transition: all 2s;
}
.p3_tab {
    position: absolute;
    left: 30px;
    top: -10px;
}
.p3_shadow {
    position: absolute;
}
.icon {
    width: 1440px;
    height: 100px;
    background-color: #e4e6e7;
    position: absolute;
    top: 120px;
}
.icon img {
    position: absolute;
}
.icon1,
.icon2,
.icon3 {
    width: 40px;
    height: 40px;
}
.icon1 {
    left: 40px;
    top: 30px;
}
.icon2 {
    left: 150px;
    top: 30px;
}
.icon3 {
    left: 260px;
    top: 30px;
}
.title3 {
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -412px;
    margin-top: -10px;
    transform: translateZ(1200px) rotateY(-60deg);
    transition: all 3s;
}
/* 第四屏 */
.section4 {
    perspective: 1000px;
}
.p4 {
    width: 500px;
    height: 600px;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) translateZ(1200px) rotateY(-120deg);
    /* border: 1px solid #000; */
    transition: all 2s;
}
.p4_pop1,
.p4_pop2,
.p4_pop3,
.p4_pop4,
.p4_pop5 {
    position: absolute;
}
.p4_pop1 {
    left: 0;
    top: 0;
}
.p4_pop2 {
    left: 20px;
    top: 240px;
}
.p4_pop3 {
    left: 30px;
    top: 20px;
}
.p4_pop4 {
    left: 350px;
    top: 50px;
}
.p4_pop5 {
    left: 60px;
    top: 400px;
}
/* 动画部分 */
.row1 div {
    animation: circleMove 40s linear infinite;
}
.row2 div {
    animation: circleMove 70s linear infinite;
}
.row3 div {
    animation: circleMove 80s linear infinite;
}
.row4 div {
    animation: circleMove 50s linear infinite;
}
@keyframes circleMove {
    from {
        transform: translateX(0) rotate(0deg);/* translate以自身的位置为基准（相当于相对定位）  rotate是旋转deg单位°*/
    }
    to {
        transform: translateX(-2000px) rotate(3600deg);
    }
}